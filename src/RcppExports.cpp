// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// cpp_wkt_set_srid
CharacterVector cpp_wkt_set_srid(CharacterVector wkt, IntegerVector srid, int precision, bool trim);
RcppExport SEXP _geovctrs_cpp_wkt_set_srid(SEXP wktSEXP, SEXP sridSEXP, SEXP precisionSEXP, SEXP trimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type wkt(wktSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type srid(sridSEXP);
    Rcpp::traits::input_parameter< int >::type precision(precisionSEXP);
    Rcpp::traits::input_parameter< bool >::type trim(trimSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_wkt_set_srid(wkt, srid, precision, trim));
    return rcpp_result_gen;
END_RCPP
}
// cpp_wkb_set_srid
List cpp_wkb_set_srid(List wkb, IntegerVector srid, int endian);
RcppExport SEXP _geovctrs_cpp_wkb_set_srid(SEXP wkbSEXP, SEXP sridSEXP, SEXP endianSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type wkb(wkbSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type srid(sridSEXP);
    Rcpp::traits::input_parameter< int >::type endian(endianSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_wkb_set_srid(wkb, srid, endian));
    return rcpp_result_gen;
END_RCPP
}
// cpp_wksxp_set_srid
List cpp_wksxp_set_srid(List wksxp, IntegerVector srid);
RcppExport SEXP _geovctrs_cpp_wksxp_set_srid(SEXP wksxpSEXP, SEXP sridSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type wksxp(wksxpSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type srid(sridSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_wksxp_set_srid(wksxp, srid));
    return rcpp_result_gen;
END_RCPP
}
// cpp_translate_xy_wkt
CharacterVector cpp_translate_xy_wkt(List xy, int precision, int trim);
RcppExport SEXP _geovctrs_cpp_translate_xy_wkt(SEXP xySEXP, SEXP precisionSEXP, SEXP trimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type xy(xySEXP);
    Rcpp::traits::input_parameter< int >::type precision(precisionSEXP);
    Rcpp::traits::input_parameter< int >::type trim(trimSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_translate_xy_wkt(xy, precision, trim));
    return rcpp_result_gen;
END_RCPP
}
// cpp_translate_xy_wkb
List cpp_translate_xy_wkb(List xy, int endian, int bufferSize);
RcppExport SEXP _geovctrs_cpp_translate_xy_wkb(SEXP xySEXP, SEXP endianSEXP, SEXP bufferSizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type xy(xySEXP);
    Rcpp::traits::input_parameter< int >::type endian(endianSEXP);
    Rcpp::traits::input_parameter< int >::type bufferSize(bufferSizeSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_translate_xy_wkb(xy, endian, bufferSize));
    return rcpp_result_gen;
END_RCPP
}
// cpp_translate_xy_wksxp
List cpp_translate_xy_wksxp(List xy);
RcppExport SEXP _geovctrs_cpp_translate_xy_wksxp(SEXP xySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type xy(xySEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_translate_xy_wksxp(xy));
    return rcpp_result_gen;
END_RCPP
}
// cpp_translate_wkt_xy
List cpp_translate_wkt_xy(CharacterVector wkt);
RcppExport SEXP _geovctrs_cpp_translate_wkt_xy(SEXP wktSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type wkt(wktSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_translate_wkt_xy(wkt));
    return rcpp_result_gen;
END_RCPP
}
// cpp_translate_wkb_xy
List cpp_translate_wkb_xy(List wkb);
RcppExport SEXP _geovctrs_cpp_translate_wkb_xy(SEXP wkbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type wkb(wkbSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_translate_wkb_xy(wkb));
    return rcpp_result_gen;
END_RCPP
}
// cpp_translate_wksxp_xy
List cpp_translate_wksxp_xy(List wksxp);
RcppExport SEXP _geovctrs_cpp_translate_wksxp_xy(SEXP wksxpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type wksxp(wksxpSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_translate_wksxp_xy(wksxp));
    return rcpp_result_gen;
END_RCPP
}
// cpp_translate_xyz_wkt
CharacterVector cpp_translate_xyz_wkt(List xyz, int precision, int trim);
RcppExport SEXP _geovctrs_cpp_translate_xyz_wkt(SEXP xyzSEXP, SEXP precisionSEXP, SEXP trimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type xyz(xyzSEXP);
    Rcpp::traits::input_parameter< int >::type precision(precisionSEXP);
    Rcpp::traits::input_parameter< int >::type trim(trimSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_translate_xyz_wkt(xyz, precision, trim));
    return rcpp_result_gen;
END_RCPP
}
// cpp_translate_xyz_wkb
List cpp_translate_xyz_wkb(List xyz, int endian, int bufferSize);
RcppExport SEXP _geovctrs_cpp_translate_xyz_wkb(SEXP xyzSEXP, SEXP endianSEXP, SEXP bufferSizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type xyz(xyzSEXP);
    Rcpp::traits::input_parameter< int >::type endian(endianSEXP);
    Rcpp::traits::input_parameter< int >::type bufferSize(bufferSizeSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_translate_xyz_wkb(xyz, endian, bufferSize));
    return rcpp_result_gen;
END_RCPP
}
// cpp_translate_xyz_wksxp
List cpp_translate_xyz_wksxp(List xyz);
RcppExport SEXP _geovctrs_cpp_translate_xyz_wksxp(SEXP xyzSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type xyz(xyzSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_translate_xyz_wksxp(xyz));
    return rcpp_result_gen;
END_RCPP
}
// cpp_translate_wkt_xyz
List cpp_translate_wkt_xyz(CharacterVector wkt);
RcppExport SEXP _geovctrs_cpp_translate_wkt_xyz(SEXP wktSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type wkt(wktSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_translate_wkt_xyz(wkt));
    return rcpp_result_gen;
END_RCPP
}
// cpp_translate_wkb_xyz
List cpp_translate_wkb_xyz(List wkb);
RcppExport SEXP _geovctrs_cpp_translate_wkb_xyz(SEXP wkbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type wkb(wkbSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_translate_wkb_xyz(wkb));
    return rcpp_result_gen;
END_RCPP
}
// cpp_translate_wksxp_xyz
List cpp_translate_wksxp_xyz(List wksxp);
RcppExport SEXP _geovctrs_cpp_translate_wksxp_xyz(SEXP wksxpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type wksxp(wksxpSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_translate_wksxp_xyz(wksxp));
    return rcpp_result_gen;
END_RCPP
}
// cpp_translate_segment_wkt
CharacterVector cpp_translate_segment_wkt(List segment, int precision, int trim);
RcppExport SEXP _geovctrs_cpp_translate_segment_wkt(SEXP segmentSEXP, SEXP precisionSEXP, SEXP trimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type segment(segmentSEXP);
    Rcpp::traits::input_parameter< int >::type precision(precisionSEXP);
    Rcpp::traits::input_parameter< int >::type trim(trimSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_translate_segment_wkt(segment, precision, trim));
    return rcpp_result_gen;
END_RCPP
}
// cpp_translate_segment_wkb
List cpp_translate_segment_wkb(List segment, int endian, int bufferSize);
RcppExport SEXP _geovctrs_cpp_translate_segment_wkb(SEXP segmentSEXP, SEXP endianSEXP, SEXP bufferSizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type segment(segmentSEXP);
    Rcpp::traits::input_parameter< int >::type endian(endianSEXP);
    Rcpp::traits::input_parameter< int >::type bufferSize(bufferSizeSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_translate_segment_wkb(segment, endian, bufferSize));
    return rcpp_result_gen;
END_RCPP
}
// cpp_translate_segment_wksxp
List cpp_translate_segment_wksxp(List segment);
RcppExport SEXP _geovctrs_cpp_translate_segment_wksxp(SEXP segmentSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type segment(segmentSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_translate_segment_wksxp(segment));
    return rcpp_result_gen;
END_RCPP
}
// cpp_translate_wkt_segment
List cpp_translate_wkt_segment(CharacterVector wkt, int includeSRID);
RcppExport SEXP _geovctrs_cpp_translate_wkt_segment(SEXP wktSEXP, SEXP includeSRIDSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type wkt(wktSEXP);
    Rcpp::traits::input_parameter< int >::type includeSRID(includeSRIDSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_translate_wkt_segment(wkt, includeSRID));
    return rcpp_result_gen;
END_RCPP
}
// cpp_translate_wkb_segment
List cpp_translate_wkb_segment(List wkb, int includeSRID);
RcppExport SEXP _geovctrs_cpp_translate_wkb_segment(SEXP wkbSEXP, SEXP includeSRIDSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type wkb(wkbSEXP);
    Rcpp::traits::input_parameter< int >::type includeSRID(includeSRIDSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_translate_wkb_segment(wkb, includeSRID));
    return rcpp_result_gen;
END_RCPP
}
// cpp_translate_wksxp_segment
List cpp_translate_wksxp_segment(List wksxp, int includeSRID);
RcppExport SEXP _geovctrs_cpp_translate_wksxp_segment(SEXP wksxpSEXP, SEXP includeSRIDSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type wksxp(wksxpSEXP);
    Rcpp::traits::input_parameter< int >::type includeSRID(includeSRIDSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_translate_wksxp_segment(wksxp, includeSRID));
    return rcpp_result_gen;
END_RCPP
}
// cpp_translate_rect_wkt
CharacterVector cpp_translate_rect_wkt(List rect, int precision, int trim);
RcppExport SEXP _geovctrs_cpp_translate_rect_wkt(SEXP rectSEXP, SEXP precisionSEXP, SEXP trimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type rect(rectSEXP);
    Rcpp::traits::input_parameter< int >::type precision(precisionSEXP);
    Rcpp::traits::input_parameter< int >::type trim(trimSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_translate_rect_wkt(rect, precision, trim));
    return rcpp_result_gen;
END_RCPP
}
// cpp_translate_rect_wkb
List cpp_translate_rect_wkb(List rect, int endian, int bufferSize);
RcppExport SEXP _geovctrs_cpp_translate_rect_wkb(SEXP rectSEXP, SEXP endianSEXP, SEXP bufferSizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type rect(rectSEXP);
    Rcpp::traits::input_parameter< int >::type endian(endianSEXP);
    Rcpp::traits::input_parameter< int >::type bufferSize(bufferSizeSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_translate_rect_wkb(rect, endian, bufferSize));
    return rcpp_result_gen;
END_RCPP
}
// cpp_translate_rect_wksxp
List cpp_translate_rect_wksxp(List rect);
RcppExport SEXP _geovctrs_cpp_translate_rect_wksxp(SEXP rectSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type rect(rectSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_translate_rect_wksxp(rect));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_geovctrs_cpp_wkt_set_srid", (DL_FUNC) &_geovctrs_cpp_wkt_set_srid, 4},
    {"_geovctrs_cpp_wkb_set_srid", (DL_FUNC) &_geovctrs_cpp_wkb_set_srid, 3},
    {"_geovctrs_cpp_wksxp_set_srid", (DL_FUNC) &_geovctrs_cpp_wksxp_set_srid, 2},
    {"_geovctrs_cpp_translate_xy_wkt", (DL_FUNC) &_geovctrs_cpp_translate_xy_wkt, 3},
    {"_geovctrs_cpp_translate_xy_wkb", (DL_FUNC) &_geovctrs_cpp_translate_xy_wkb, 3},
    {"_geovctrs_cpp_translate_xy_wksxp", (DL_FUNC) &_geovctrs_cpp_translate_xy_wksxp, 1},
    {"_geovctrs_cpp_translate_wkt_xy", (DL_FUNC) &_geovctrs_cpp_translate_wkt_xy, 1},
    {"_geovctrs_cpp_translate_wkb_xy", (DL_FUNC) &_geovctrs_cpp_translate_wkb_xy, 1},
    {"_geovctrs_cpp_translate_wksxp_xy", (DL_FUNC) &_geovctrs_cpp_translate_wksxp_xy, 1},
    {"_geovctrs_cpp_translate_xyz_wkt", (DL_FUNC) &_geovctrs_cpp_translate_xyz_wkt, 3},
    {"_geovctrs_cpp_translate_xyz_wkb", (DL_FUNC) &_geovctrs_cpp_translate_xyz_wkb, 3},
    {"_geovctrs_cpp_translate_xyz_wksxp", (DL_FUNC) &_geovctrs_cpp_translate_xyz_wksxp, 1},
    {"_geovctrs_cpp_translate_wkt_xyz", (DL_FUNC) &_geovctrs_cpp_translate_wkt_xyz, 1},
    {"_geovctrs_cpp_translate_wkb_xyz", (DL_FUNC) &_geovctrs_cpp_translate_wkb_xyz, 1},
    {"_geovctrs_cpp_translate_wksxp_xyz", (DL_FUNC) &_geovctrs_cpp_translate_wksxp_xyz, 1},
    {"_geovctrs_cpp_translate_segment_wkt", (DL_FUNC) &_geovctrs_cpp_translate_segment_wkt, 3},
    {"_geovctrs_cpp_translate_segment_wkb", (DL_FUNC) &_geovctrs_cpp_translate_segment_wkb, 3},
    {"_geovctrs_cpp_translate_segment_wksxp", (DL_FUNC) &_geovctrs_cpp_translate_segment_wksxp, 1},
    {"_geovctrs_cpp_translate_wkt_segment", (DL_FUNC) &_geovctrs_cpp_translate_wkt_segment, 2},
    {"_geovctrs_cpp_translate_wkb_segment", (DL_FUNC) &_geovctrs_cpp_translate_wkb_segment, 2},
    {"_geovctrs_cpp_translate_wksxp_segment", (DL_FUNC) &_geovctrs_cpp_translate_wksxp_segment, 2},
    {"_geovctrs_cpp_translate_rect_wkt", (DL_FUNC) &_geovctrs_cpp_translate_rect_wkt, 3},
    {"_geovctrs_cpp_translate_rect_wkb", (DL_FUNC) &_geovctrs_cpp_translate_rect_wkb, 3},
    {"_geovctrs_cpp_translate_rect_wksxp", (DL_FUNC) &_geovctrs_cpp_translate_rect_wksxp, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_geovctrs(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
