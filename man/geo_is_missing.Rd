% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geo-missing.R
\docType{data}
\name{geo_is_missing}
\alias{geo_is_missing}
\alias{geo_has_missing}
\alias{geo_is_finite}
\alias{geo_is_empty}
\alias{NA_wkt_}
\alias{NA_wkb_}
\alias{NA_collection_}
\alias{NA_xy_}
\alias{NA_segment_}
\alias{NA_rect_}
\title{Missing, empty, and non-finite geometries}
\format{
An object of class \code{wk_wkt} (inherits from \code{wk_vctr}, \code{geovctr}) of length 1.

An object of class \code{wk_wkb} (inherits from \code{wk_vctr}, \code{geovctr}) of length 1.

An object of class \code{NULL} of length 0.

An object of class \code{geovctrs_xy} (inherits from \code{geovctr}, \code{vctrs_rcrd}, \code{vctrs_vctr}) of length 1.

An object of class \code{geovctrs_segment} (inherits from \code{geovctr}, \code{vctrs_rcrd}, \code{vctrs_vctr}) of length 1.

An object of class \code{geovctrs_rect} (inherits from \code{geovctr}, \code{vctrs_rcrd}, \code{vctrs_vctr}) of length 1.
}
\usage{
geo_is_missing(x)

geo_has_missing(x)

geo_is_finite(x)

geo_is_empty(x)

NA_wkt_

NA_wkb_

NA_collection_

NA_xy_

NA_segment_

NA_rect_
}
\arguments{
\item{x}{A geometry-like object, or one that can be
coerced to a geometry-like object using \code{\link[=as_geovctr]{as_geovctr()}}.}
}
\value{
A logical vector
}
\description{
Whereas EMPTY geometries are a concept at the geometry level,
missing values are a concept of the in-memory vectors used to store
them in R. The \code{\link[=geo_is_missing]{geo_is_missing()}} function can be used to identify
these values, similar to \code{\link[=is.na]{is.na()}}. Missing coordinates (\code{NA} or \code{NaN})
can be identified using \code{\link[=geo_has_missing]{geo_has_missing()}}, and \code{\link[=geo_is_finite]{geo_is_finite()}}
can be used to ensure that all coordinates are finite. Note that
\code{geo_xy(NA, NA)}, \code{wkt("POINT (nan nan)")}, and
\code{wkt("MULTIPOINT (nan nan)")} are all considered empty points,
and are therefore non-misssing, contain no missing coordinates, and
are finite (use \code{is.na()} and/or \code{\link[stringr:str_detect]{stringr::str_detect()}}) if you
would like to specifically detect these cases).
}
\examples{
geo_is_missing(NA_wkt_)
# geo_has_missing(NA_wkt_)
# geo_is_finite(NA_wkt_)
geo_is_empty(NA_wkt_)

geo_is_missing(wkt("LINESTRING (10 inf, nan 2)"))
# geo_has_missing(wkt("LINESTRING (10 inf, nan 2)"))
# geo_is_finite(wkt("LINESTRING (10 inf, nan 2)"))
geo_is_empty(wkt("LINESTRING (10 inf, nan 2)"))

geo_is_missing(wkt("LINESTRING (10 inf, 1 2)"))
# geo_has_missing(wkt("LINESTRING (10 inf, 1 2)"))
# geo_is_finite(wkt("LINESTRING (10 inf, 1 2)"))
geo_is_empty(wkt("LINESTRING (10 inf, 1 2)"))

# EMPTY geometries are considered finite and non-missing
geo_is_missing(wkt("LINESTRING EMPTY"))
# geo_has_missing(wkt("LINESTRING EMPTY"))
# geo_is_finite(wkt("LINESTRING EMPTY"))
geo_is_empty(wkt("LINESTRING EMPTY"))

# POINT EMPTY, POINT (nan nan), and geo_xy(NA, NA)
# are all empty points
geo_is_missing(wkt("POINT EMPTY"))
# geo_has_missing(wkt("POINT EMPTY"))
# geo_is_finite(wkt("POINT EMPTY"))
geo_is_empty(wkt("POINT EMPTY"))

geo_is_missing(wkt("POINT (nan nan)"))
# geo_has_missing(wkt("POINT (nan nan)"))
# geo_is_finite(wkt("POINT (nan nan)"))
geo_is_empty(wkt("POINT (nan nan)"))

geo_is_missing(geo_xy(NA, NA))
# geo_has_missing(geo_xy(NA, NA))
# geo_is_finite(geo_xy(NA, NA))
geo_is_empty(geo_xy(NA, NA))

}
\keyword{datasets}
